buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url "https://plugins.gradle.org/m2/" }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
		classpath "gradle.plugin.com.github.spotbugs:spotbugs-gradle-plugin:$spotbugsPluginVersion"
		classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessPluginVersion"
		classpath "de.thetaphi:forbiddenapis:$forbiddenapisVersion"
		classpath "de.aaschmid:gradle-cpd-plugin:1.0"
	}
}

// basic plugins
plugins {
	id 'java'
	id 'maven'
	id 'maven-publish'
	// https://stackoverflow.com/questions/37555196
	// id "org.springframework.boot" version "2.1.2.RELEASE"
	id "io.spring.dependency-management" version "1.0.6.RELEASE"
}
apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.spotbugs'

// basic configuration
group = "jp.xet.spike"
ext.artifactId = "spring-spike"

// custom plugins
apply plugin: "checkstyle"
apply plugin: "com.github.spotbugs"
apply plugin: "pmd"
apply plugin: "cpd"
apply plugin: "jacoco"
apply plugin: "de.thetaphi.forbiddenapis"
apply plugin: "com.diffplug.gradle.spotless"

// custom configuration
apply from: "${rootProject.projectDir}/gradle/version.gradle"
apply from: "${rootProject.projectDir}/gradle/sourceArtifact.gradle"

apply from: "${rootProject.projectDir}/gradle/quality/checkstyle.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/spotbugs.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/pmd.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/cpd.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/jacoco.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/forbiddenapis.gradle"
apply from: "${rootProject.projectDir}/gradle/quality/spotless.gradle"

tasks.withType(com.github.spotbugs.SpotBugsTask) {
	reports {
		xml.enabled = false
		html.enabled = true
	}
	pluginClasspath = project.configurations.spotbugsPlugins
}

// compiler
sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(AbstractCompile) each {
	it.options.encoding = "UTF-8"
}

compileJava {
	options.compilerArgs << "-Werror"
	options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Xlint:-deprecation"
}

// ======== libraries ========
repositories {
	jcenter()
	mavenCentral()
	maven { url 'https://dl.bintray.com/dai0304/maven' }
	maven { url 'https://jitpack.io' }
}

configurations {
	testImplementation.extendsFrom compileOnly
}

dependencies {
	// spring
	implementation "org.springframework.boot:spring-boot-starter"
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	// aws
	// implementation 'jp.xet.spring.aws:aws-client-spring-boot-configuration:1.0.0'
	// implementation "com.amazonaws:aws-java-sdk-sts:$awsJavaSdkVersion"

	// others

	// lombok
	compile "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"
	testCompile "org.projectlombok:lombok"
	testAnnotationProcessor "org.projectlombok:lombok"

	// test
	testImplementation "org.springframework.boot:spring-boot-starter-test"

	// build
	spotbugsPlugins "com.h3xstream.findsecbugs:findsecbugs-plugin:$findsecbugsVersion"
}

// ======== wrapper ========
wrapper {
	gradleVersion = '5.5'
	distributionType = Wrapper.DistributionType.ALL
}
